# Generated by Django 3.1.1 on 2020-12-03 18:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    replaces = [('hsvp', '0001_initial'), ('hsvp', '0002_bankdetail_bidder'), ('hsvp', '0003_auto_20201003_0614'), ('hsvp', '0004_auto_20201003_0807'), ('hsvp', '0005_auto_20201003_0824'), ('hsvp', '0006_auto_20201021_0427'), ('hsvp', '0007_bid'), ('hsvp', '0008_bidderauction'), ('hsvp', '0009_jointholder'), ('hsvp', '0010_round'), ('hsvp', '0011_roundbid'), ('hsvp', '0012_userdocument'), ('hsvp', '0013_auto_20201103_0551'), ('hsvp', '0014_auto_20201103_0554'), ('hsvp', '0015_auto_20201103_0555'), ('hsvp', '0016_delete_roundbid'), ('hsvp', '0017_auto_20201108_0706'), ('hsvp', '0018_auto_20201108_0706'), ('hsvp', '0019_auto_20201108_0707'), ('hsvp', '0020_remove_jointholder_address'), ('hsvp', '0021_round_round_number'), ('hsvp', '0022_auto_20201108_1135'), ('hsvp', '0023_auto_20201109_0951'), ('hsvp', '0024_auto_20201112_0719'), ('hsvp', '0025_auto_20201112_0721'), ('hsvp', '0026_auto_20201124_0941'), ('hsvp', '0027_auto_20201124_0945'), ('hsvp', '0028_auto_20201126_0541'), ('hsvp', '0029_auto_20201126_0545'), ('hsvp', '0030_auto_20201126_0548'), ('hsvp', '0031_auto_20201126_0553'), ('hsvp', '0032_auto_20201126_1708'), ('hsvp', '0033_auto_20201129_1003'), ('hsvp', '0034_remove_auctiondetail_items'), ('hsvp', '0035_auctiondetail_auction_items'), ('hsvp', '0036_remove_item_image_url'), ('hsvp', '0037_item_image_url'), ('hsvp', '0038_auto_20201203_1752')]

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'username has already been taken.'}, help_text='required. 30 characters or fewer. letters, digits and @/./+/-/_ only.', max_length=254, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'please enter a valid username. it may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], verbose_name='username')),
                ('email', models.EmailField(default=None, error_messages={'unique': 'email address is already registered.'}, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('contact_number', phonenumber_field.modelfields.PhoneNumberField(default=None, error_messages={'unique': 'contact number is associated with some other account. please contact administrators if the number belongs to you.'}, max_length=128, null=True, region=None, unique=True, verbose_name='contact number')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('father_first_name', models.CharField(blank=True, max_length=30, verbose_name='Father first name')),
                ('father_last_name', models.CharField(blank=True, max_length=30, verbose_name='Father last name')),
                ('gst_no', models.CharField(blank=True, max_length=30, verbose_name='GST No')),
                ('otp', models.CharField(blank=True, max_length=10, verbose_name='OTP sent to user')),
                ('otp_sent_at', models.CharField(blank=True, max_length=10, verbose_name='OTP sent at')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Deselect this instead of deleting accounts.', verbose_name='active')),
                ('date_invited', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date invited')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='BankDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=30, verbose_name='Name of account Holder')),
                ('bank_name', models.CharField(max_length=30, verbose_name='Full name of bank')),
                ('account_number', models.CharField(max_length=30, verbose_name='Account number')),
                ('ifs', models.CharField(max_length=30, verbose_name='IFSC code of bank')),
                ('branch', models.CharField(max_length=30, verbose_name='Branch name, for exam: sector 55 branch ')),
            ],
            options={
                'verbose_name': 'bank_detail',
                'verbose_name_plural': 'bank_details',
                'unique_together': {('bank_name', 'account_number')},
            },
        ),
        migrations.CreateModel(
            name='Bidder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('refund_account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hsvp.bankdetail')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'bidder',
                'verbose_name_plural': 'bidders',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('type', models.CharField(choices=[('home', 'Home'), ('office', 'Office'), ('billing', 'Billing')], max_length=30, verbose_name='Type of address')),
                ('line_1', models.CharField(max_length=90, verbose_name='Address line 1')),
                ('line_2', models.CharField(blank=True, max_length=90, null=True, verbose_name='Address line 2')),
                ('pincode', models.CharField(max_length=10, verbose_name='6 Digit pincode')),
                ('state', models.CharField(max_length=30, verbose_name='State')),
                ('city', models.CharField(max_length=30, verbose_name='City')),
                ('country', models.CharField(max_length=30, verbose_name='Country')),
                ('contact_number', phonenumber_field.modelfields.PhoneNumberField(default=None, max_length=128, null=True, region=None, verbose_name='contact number')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Any notes associated with particular address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='AuctionDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=300, verbose_name='Name of auctionable item')),
                ('description', models.TextField(blank=True)),
                ('quantity', models.PositiveSmallIntegerField(blank=True)),
            ],
            options={
                'verbose_name': 'auction details',
                'verbose_name_plural': "auctions' details",
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=300, verbose_name='Document name')),
                ('doc_type', models.CharField(blank=True, max_length=300, null=True, verbose_name='Document type')),
                ('file_url_1', models.TextField(blank=True, null=True)),
                ('file_url_2', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'document',
                'verbose_name_plural': 'documents',
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('primary_account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hsvp.bankdetail')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'seller',
                'verbose_name_plural': 'sellers',
            },
        ),
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=300, verbose_name='Auction name')),
                ('description', models.TextField(blank=True)),
                ('starts_at', models.DateTimeField(blank=True, null=True)),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('no_of_rounds', models.PositiveSmallIntegerField(blank=True)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=13)),
                ('registration_time_starts_at', models.DateTimeField(blank=True, null=True)),
                ('registration_time_ends_at', models.DateTimeField(blank=True, null=True)),
                ('emd_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=7)),
                ('h1_payment_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=4)),
                ('h1_payment_end_date', models.DateTimeField(blank=True, null=True)),
                ('details', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hsvp.auctiondetail')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hsvp.seller')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='hsvp.document')),
            ],
            options={
                'verbose_name': 'auction',
                'verbose_name_plural': 'auctions',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Name of item that will be auctioned')),
                ('description', models.TextField(blank=True)),
                ('image_url', models.TextField(blank=True, null=True)),
                ('auction_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hsvp.auctiondetail')),
            ],
            options={
                'verbose_name': 'item',
                'verbose_name_plural': 'items',
            },
        ),
        migrations.CreateModel(
            name='AuctionDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.auction')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hsvp.document')),
            ],
            options={
                'verbose_name': 'auction documents',
                'verbose_name_plural': "auctions' documents",
                'unique_together': {('auction', 'document')},
            },
        ),
        migrations.CreateModel(
            name='EMD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('quantity', models.PositiveSmallIntegerField(blank=True)),
                ('processing_fees', models.DecimalField(blank=True, decimal_places=2, max_digits=7)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=7)),
                ('payment_mode', models.CharField(choices=[('O', 'Online'), ('C', 'Challan')], max_length=5, verbose_name='Payment mode')),
                ('status', models.CharField(choices=[('PR', 'Processing'), ('S', 'Successful'), ('PE', 'Pending'), ('F', 'Failed')], max_length=5, verbose_name='EMD payment status')),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.auction')),
            ],
            options={
                'verbose_name': 'EMD',
                'verbose_name_plural': 'EMDs',
            },
        ),
        migrations.CreateModel(
            name='BidderAuction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.auction')),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.bidder')),
                ('emd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.emd')),
            ],
            options={
                'verbose_name': 'bidder auction',
                'verbose_name_plural': "bidders' auction",
                'unique_together': {('bidder', 'auction')},
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('starts_at', models.DateTimeField(blank=True, null=True)),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=13, null=True)),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.auction')),
                ('h1_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='hsvp.bidder')),
                ('rounds', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'round',
                'verbose_name_plural': 'rounds',
            },
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hsvp.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user details',
                'verbose_name_plural': "users' details",
                'unique_together': {('user', 'document')},
            },
        ),
        migrations.CreateModel(
            name='JointHolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.bidder')),
                ('refund_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.bankdetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'joint holder',
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=13, null=True)),
                ('placed_at', models.DateField(blank=True, null=True)),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.auction')),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.bidder')),
                ('round_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hsvp.round')),
            ],
            options={
                'verbose_name': 'bid',
                'verbose_name_plural': 'bids',
            },
        ),
        migrations.AddField(
            model_name='auction',
            name='auction_items',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='hsvp.item'),
        ),
        migrations.AlterField(
            model_name='auction',
            name='details',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hsvp.auctiondetail'),
        ),
        migrations.RenameField(
            model_name='auction',
            old_name='document',
            new_name='documents',
        ),
    ]
